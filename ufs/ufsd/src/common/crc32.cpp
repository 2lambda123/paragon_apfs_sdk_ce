// <copyright file="crc32.cpp" company="Paragon Software Group">
//
// Copyright (c) 2002-2019 Paragon Software Group, All rights reserved.
//
// The license for this file is defined in a separate document "LICENSE.txt"
// located at the root of the project.
//
// </copyright>
////////////////////////////////////////////////////////////////
//
// This file contains implementation of function's for caclculating crc
//

#include "../h/versions.h"

#if defined UFSD_EXTFS2 || defined UFSD_XFS || defined UFSD_BTRFS || defined UFSD_APFS

#include <ufsd.h>   // size_t
#include "../h/crc32.h"

namespace UFSD {

static unsigned short const tbl16[256] = {
  0x0000, 0xC0C1, 0xC181, 0x0140, 0xC301, 0x03C0, 0x0280, 0xC241,
  0xC601, 0x06C0, 0x0780, 0xC741, 0x0500, 0xC5C1, 0xC481, 0x0440,
  0xCC01, 0x0CC0, 0x0D80, 0xCD41, 0x0F00, 0xCFC1, 0xCE81, 0x0E40,
  0x0A00, 0xCAC1, 0xCB81, 0x0B40, 0xC901, 0x09C0, 0x0880, 0xC841,
  0xD801, 0x18C0, 0x1980, 0xD941, 0x1B00, 0xDBC1, 0xDA81, 0x1A40,
  0x1E00, 0xDEC1, 0xDF81, 0x1F40, 0xDD01, 0x1DC0, 0x1C80, 0xDC41,
  0x1400, 0xD4C1, 0xD581, 0x1540, 0xD701, 0x17C0, 0x1680, 0xD641,
  0xD201, 0x12C0, 0x1380, 0xD341, 0x1100, 0xD1C1, 0xD081, 0x1040,
  0xF001, 0x30C0, 0x3180, 0xF141, 0x3300, 0xF3C1, 0xF281, 0x3240,
  0x3600, 0xF6C1, 0xF781, 0x3740, 0xF501, 0x35C0, 0x3480, 0xF441,
  0x3C00, 0xFCC1, 0xFD81, 0x3D40, 0xFF01, 0x3FC0, 0x3E80, 0xFE41,
  0xFA01, 0x3AC0, 0x3B80, 0xFB41, 0x3900, 0xF9C1, 0xF881, 0x3840,
  0x2800, 0xE8C1, 0xE981, 0x2940, 0xEB01, 0x2BC0, 0x2A80, 0xEA41,
  0xEE01, 0x2EC0, 0x2F80, 0xEF41, 0x2D00, 0xEDC1, 0xEC81, 0x2C40,
  0xE401, 0x24C0, 0x2580, 0xE541, 0x2700, 0xE7C1, 0xE681, 0x2640,
  0x2200, 0xE2C1, 0xE381, 0x2340, 0xE101, 0x21C0, 0x2080, 0xE041,
  0xA001, 0x60C0, 0x6180, 0xA141, 0x6300, 0xA3C1, 0xA281, 0x6240,
  0x6600, 0xA6C1, 0xA781, 0x6740, 0xA501, 0x65C0, 0x6480, 0xA441,
  0x6C00, 0xACC1, 0xAD81, 0x6D40, 0xAF01, 0x6FC0, 0x6E80, 0xAE41,
  0xAA01, 0x6AC0, 0x6B80, 0xAB41, 0x6900, 0xA9C1, 0xA881, 0x6840,
  0x7800, 0xB8C1, 0xB981, 0x7940, 0xBB01, 0x7BC0, 0x7A80, 0xBA41,
  0xBE01, 0x7EC0, 0x7F80, 0xBF41, 0x7D00, 0xBDC1, 0xBC81, 0x7C40,
  0xB401, 0x74C0, 0x7580, 0xB541, 0x7700, 0xB7C1, 0xB681, 0x7640,
  0x7200, 0xB2C1, 0xB381, 0x7340, 0xB101, 0x71C0, 0x7080, 0xB041,
  0x5000, 0x90C1, 0x9181, 0x5140, 0x9301, 0x53C0, 0x5280, 0x9241,
  0x9601, 0x56C0, 0x5780, 0x9741, 0x5500, 0x95C1, 0x9481, 0x5440,
  0x9C01, 0x5CC0, 0x5D80, 0x9D41, 0x5F00, 0x9FC1, 0x9E81, 0x5E40,
  0x5A00, 0x9AC1, 0x9B81, 0x5B40, 0x9901, 0x59C0, 0x5880, 0x9841,
  0x8801, 0x48C0, 0x4980, 0x8941, 0x4B00, 0x8BC1, 0x8A81, 0x4A40,
  0x4E00, 0x8EC1, 0x8F81, 0x4F40, 0x8D01, 0x4DC0, 0x4C80, 0x8C41,
  0x4400, 0x84C1, 0x8581, 0x4540, 0x8701, 0x47C0, 0x4680, 0x8641,
  0x8201, 0x42C0, 0x4380, 0x8341, 0x4100, 0x81C1, 0x8081, 0x4040
};

static const unsigned int tbl32[256] = {
    0x00000000U, 0xf26b8303U, 0xe13b70f7U, 0x1350f3f4U,
    0xc79a971fU, 0x35f1141cU, 0x26a1e7e8U, 0xd4ca64ebU,
    0x8ad958cfU, 0x78b2dbccU, 0x6be22838U, 0x9989ab3bU,
    0x4d43cfd0U, 0xbf284cd3U, 0xac78bf27U, 0x5e133c24U,
    0x105ec76fU, 0xe235446cU, 0xf165b798U, 0x030e349bU,
    0xd7c45070U, 0x25afd373U, 0x36ff2087U, 0xc494a384U,
    0x9a879fa0U, 0x68ec1ca3U, 0x7bbcef57U, 0x89d76c54U,
    0x5d1d08bfU, 0xaf768bbcU, 0xbc267848U, 0x4e4dfb4bU,
    0x20bd8edeU, 0xd2d60dddU, 0xc186fe29U, 0x33ed7d2aU,
    0xe72719c1U, 0x154c9ac2U, 0x061c6936U, 0xf477ea35U,
    0xaa64d611U, 0x580f5512U, 0x4b5fa6e6U, 0xb93425e5U,
    0x6dfe410eU, 0x9f95c20dU, 0x8cc531f9U, 0x7eaeb2faU,
    0x30e349b1U, 0xc288cab2U, 0xd1d83946U, 0x23b3ba45U,
    0xf779deaeU, 0x05125dadU, 0x1642ae59U, 0xe4292d5aU,
    0xba3a117eU, 0x4851927dU, 0x5b016189U, 0xa96ae28aU,
    0x7da08661U, 0x8fcb0562U, 0x9c9bf696U, 0x6ef07595U,
    0x417b1dbcU, 0xb3109ebfU, 0xa0406d4bU, 0x522bee48U,
    0x86e18aa3U, 0x748a09a0U, 0x67dafa54U, 0x95b17957U,
    0xcba24573U, 0x39c9c670U, 0x2a993584U, 0xd8f2b687U,
    0x0c38d26cU, 0xfe53516fU, 0xed03a29bU, 0x1f682198U,
    0x5125dad3U, 0xa34e59d0U, 0xb01eaa24U, 0x42752927U,
    0x96bf4dccU, 0x64d4cecfU, 0x77843d3bU, 0x85efbe38U,
    0xdbfc821cU, 0x2997011fU, 0x3ac7f2ebU, 0xc8ac71e8U,
    0x1c661503U, 0xee0d9600U, 0xfd5d65f4U, 0x0f36e6f7U,
    0x61c69362U, 0x93ad1061U, 0x80fde395U, 0x72966096U,
    0xa65c047dU, 0x5437877eU, 0x4767748aU, 0xb50cf789U,
    0xeb1fcbadU, 0x197448aeU, 0x0a24bb5aU, 0xf84f3859U,
    0x2c855cb2U, 0xdeeedfb1U, 0xcdbe2c45U, 0x3fd5af46U,
    0x7198540dU, 0x83f3d70eU, 0x90a324faU, 0x62c8a7f9U,
    0xb602c312U, 0x44694011U, 0x5739b3e5U, 0xa55230e6U,
    0xfb410cc2U, 0x092a8fc1U, 0x1a7a7c35U, 0xe811ff36U,
    0x3cdb9bddU, 0xceb018deU, 0xdde0eb2aU, 0x2f8b6829U,
    0x82f63b78U, 0x709db87bU, 0x63cd4b8fU, 0x91a6c88cU,
    0x456cac67U, 0xb7072f64U, 0xa457dc90U, 0x563c5f93U,
    0x082f63b7U, 0xfa44e0b4U, 0xe9141340U, 0x1b7f9043U,
    0xcfb5f4a8U, 0x3dde77abU, 0x2e8e845fU, 0xdce5075cU,
    0x92a8fc17U, 0x60c37f14U, 0x73938ce0U, 0x81f80fe3U,
    0x55326b08U, 0xa759e80bU, 0xb4091bffU, 0x466298fcU,
    0x1871a4d8U, 0xea1a27dbU, 0xf94ad42fU, 0x0b21572cU,
    0xdfeb33c7U, 0x2d80b0c4U, 0x3ed04330U, 0xccbbc033U,
    0xa24bb5a6U, 0x502036a5U, 0x4370c551U, 0xb11b4652U,
    0x65d122b9U, 0x97baa1baU, 0x84ea524eU, 0x7681d14dU,
    0x2892ed69U, 0xdaf96e6aU, 0xc9a99d9eU, 0x3bc21e9dU,
    0xef087a76U, 0x1d63f975U, 0x0e330a81U, 0xfc588982U,
    0xb21572c9U, 0x407ef1caU, 0x532e023eU, 0xa145813dU,
    0x758fe5d6U, 0x87e466d5U, 0x94b49521U, 0x66df1622U,
    0x38cc2a06U, 0xcaa7a905U, 0xd9f75af1U, 0x2b9cd9f2U,
    0xff56bd19U, 0x0d3d3e1aU, 0x1e6dcdeeU, 0xec064eedU,
    0xc38d26c4U, 0x31e6a5c7U, 0x22b65633U, 0xd0ddd530U,
    0x0417b1dbU, 0xf67c32d8U, 0xe52cc12cU, 0x1747422fU,
    0x49547e0bU, 0xbb3ffd08U, 0xa86f0efcU, 0x5a048dffU,
    0x8ecee914U, 0x7ca56a17U, 0x6ff599e3U, 0x9d9e1ae0U,
    0xd3d3e1abU, 0x21b862a8U, 0x32e8915cU, 0xc083125fU,
    0x144976b4U, 0xe622f5b7U, 0xf5720643U, 0x07198540U,
    0x590ab964U, 0xab613a67U, 0xb831c993U, 0x4a5a4a90U,
    0x9e902e7bU, 0x6cfbad78U, 0x7fab5e8cU, 0x8dc0dd8fU,
    0xe330a81aU, 0x115b2b19U, 0x020bd8edU, 0xf0605beeU,
    0x24aa3f05U, 0xd6c1bc06U, 0xc5914ff2U, 0x37faccf1U,
    0x69e9f0d5U, 0x9b8273d6U, 0x88d28022U, 0x7ab90321U,
    0xae7367caU, 0x5c18e4c9U, 0x4f48173dU, 0xbd23943eU,
    0xf36e6f75U, 0x0105ec76U, 0x12551f82U, 0xe03e9c81U,
    0x34f4f86aU, 0xc69f7b69U, 0xd5cf889dU, 0x27a40b9eU,
    0x79b737baU, 0x8bdcb4b9U, 0x988c474dU, 0x6ae7c44eU,
    0xbe2da0a5U, 0x4c4623a6U, 0x5f16d052U, 0xad7d5351U
};


template<typename T>
T DoCrc( T crc, const T* tbl, const void* pBuffer, size_t BufSize )
{
  const unsigned char* buf = reinterpret_cast<const unsigned char*>(pBuffer);

  while ( BufSize-- != 0 )
  {
    crc ^= *buf++;
    crc = tbl[crc & 0xFF] ^ (crc >> 8);
  }

  return crc;
}


unsigned short crc16( unsigned short crc, const void* pBuffer, size_t BufSize )
{
  return DoCrc( crc, tbl16, pBuffer, BufSize );
}


unsigned int crc32c(unsigned int crc, const void *pBuffer, size_t BufSize)
{
  return DoCrc( crc, tbl32, pBuffer, BufSize );
}

};

#endif
